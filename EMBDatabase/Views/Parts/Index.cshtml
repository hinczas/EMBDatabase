@model PagedList.IPagedList<EMBDatabase.Models.Part>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Parts";
}
<style>
    table a:hover {
        text-decoration: none;
    }

    #pager {
        padding: 0;
        text-align: center;
    }

    .pagination {
        margin: 5px;
    }
</style>
<div>
    <p />
</div>
<div class="row">
    <div class="col-md-3">
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-warning">
                    <div class="panel-heading">Actions</div>
                    <div class="panel-body">
                        @using (Html.BeginForm("Index", "Parts", FormMethod.Get))
                        {
                            <p>
                                <div class="input-group">
                                    @Html.Hidden("prevPagesNum", ViewBag.PartsPerPage as string)
                                    @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control", placeholder = "Search for parts..." })
                                    <span class="input-group-btn">
                                        <button class="btn btn-default" type="submit">Go!</button>
                                    </span>
                                </div>
                            </p>
                        }
                        @using (Html.BeginForm())
                        {
                            <p>
                                <div class="input-group">
                                    @Html.Hidden("prevPagesNum", ViewBag.PartsPerPage as string)
                                    <span class="input-group-addon" id="basic-addon3">Parts per page</span>
                                    @Html.DropDownList("pagesNum",
                                            new SelectList(new List<string>() { "20","35","50","all"}),  new { @class = "form-control" })

                                    <span class="input-group-btn">
                                        <button class="btn btn-default" type="submit">Go!</button>
                                    </span>
                                </div>
                            </p>
                        }
                        <p>
                            @Html.ActionLink("New Part", "Create")
                        </p>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-info">
                    <div class="panel-heading">Info</div>
                    <div class="panel-body">
                        <p>
                            @{
                                var db = new EMBDatabase.Context.EMBContext();
                                var parts = db.Part.ToList();
                            } 

                            Entries: <b>@parts.Count()</b><br />
                            All parts: <b>@parts.Sum(a => a.Quantity)</b><br />
                            Total worth: <b>@parts.Sum(b => b.Quantity * b.Price)</b><br />
                            Pages: <b>@Model.PageCount</b><br />

                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-9">
        <div class="panel panel-success">
            <div class="panel-heading">
                All parts

            </div>
            <table class="table">
                <tr>
                    <th>
                        @Html.ActionLink("Number", "Index", new { sortOrder = ViewBag.NumberSortParam, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th>
                        @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParam, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th>
                        Voltage
                    </th>
                    <th>
                        Current
                    </th>
                    <th>
                        Pin Count
                    </th>
                    <th>
                        Price
                    </th>
                    <th>
                        Quantity
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.ActionLink(item.Name, "Details", new { id = item.Id })
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Voltage)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Current)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Pin_Count)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Price)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Quantity)
                        </td>
                        <td>
                            <a href="@Url.Action("Edit", "Parts", new { id = item.Id })">
                                <span class="glyphicon glyphicon-edit" aria-hidden="true"></span>
                            </a>
                            @Html.ActionLink(" ", "Delete", new { id = item.Id }, new { onclick = "return confirm('Are you sure you wish to delete this Part?');", @class = "glyphicon glyphicon-remove" })
                        </td>
                    </tr>
                }
            </table>
            @if (Model.PageCount > 1)
                {
                    <div class="panel-footer" id="pager">
                        <nav aria-label="Page navigation">
                            @Html.PagedListPager(Model, page => Url.Action("Index",
                                new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, prevPagesNum = ViewBag.PartsPerPage }))                            
                        </nav>
                    </div>
                }
        </div>
    </div>
</div>