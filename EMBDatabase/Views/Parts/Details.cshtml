@model EMBDatabase.Models.Part
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
@{
    ViewBag.Title = "Part";
}
<script src="~/Scripts/CustomModal.js"></script>
<style>
    .row {
        padding-bottom: 5px;
    }

    textarea {
        width: 250px;
        height: 100px;
    }

    select {
        min-width: 150px;
    }

    .containerz {
        width: 100%;
        text-align: right;
    }

    .block {
        display: inline-block;
    }

    .col-md-4 {
        white-space: nowrap;
        width: 150px;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    #imagepreview {
        max-width: 1024px;
        max-height: 800px;
    }

    .modal {
        max-width: 100%;
    }

    @@media (min-width: 768px) {
        .modal-dialog {
            width: fit-content;
            margin: 30px auto;
        }
    }

    .modal-header, .modal-body {
        padding: 5px;
        border-bottom: none;
    }

    img {
        border-radius: 3px;
    }
</style>
<div>
    <p />
</div>

<div class="row">
    <div class="col-md-3">
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-warning">
                    <div class="panel-heading">Actions</div>
                    <div class="panel-body">
                        <div class="btn-group btn-group-justified" role="group" aria-label="...">
                            @Html.ActionLink("Create", "Create", null, new { @type = "button", @class = "btn btn-primary" })
                            @Html.ActionLink("Edit", "Edit", new { id = Model.Id }, new { @type = "button", @class = "btn btn-warning" })
                            @Html.ActionLink("Delete", "Delete", new { id = Model.Id }, new { @type = "button", @class = "btn btn-danger", onclick = "return confirm('Are you sure you wish to delete this Part?');" })
                        </div>
                        <br />
                        <p>
                            @Html.ActionLink(HttpUtility.HtmlDecode("&laquo; Back to list"), "Index", "Parts")
                        </p>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-info">
                    <div class="panel-heading">Info</div>
                    <div class="panel-body">
                        <p><b>@Html.DisplayNameFor(model => model.CreateDate) :</b> @Html.DisplayFor(model => model.CreateDate)</p>
                        <p><b>@Html.DisplayNameFor(model => model.UpdateDate) :</b> @Html.DisplayFor(model => model.UpdateDate)</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-9">
        @*<div class="row">
                <div class="col-md-3">
                    <div class="btn-group btn-group-justified" role="group" aria-label="...">
                        @Html.ActionLink("Create", "Create", null, new { @type = "button", @class = "btn btn-primary" })
                        @Html.ActionLink("Edit", "Edit", new { id = Model.Id }, new { @type = "button", @class = "btn btn-warning" })
                        @Html.ActionLink("Delete", "Delete", new { id = Model.Id }, new { @type = "button", @class = "btn btn-danger", onclick = "return confirm('Are you sure you wish to delete this Part?');" })
                    </div>
                </div>
            </div>*@
        <div class="panel panel-success">
            <div class="panel-heading">Part (id : @Model.Id)</div>
            <div class="panel-body">
                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.Number)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Number)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Keywords)
                    </dt>

                    <dd>
                        @if (!string.IsNullOrEmpty(@Model.Keywords))
                        {
                            foreach (string link in @Model.Keywords.Split(','))
                            {
                                @Html.ActionLink(link + " ", "Index", new { tagName = link })
                            }
                        }
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Voltage)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Voltage)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Current)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Current)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Quantity)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Quantity)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Pin_Count)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Pin_Count)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Price)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Price)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Name)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Name)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Description)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Description)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Notes)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Notes)
                    </dd>

                    <hr>
                    @if (Model.Manufacturer != null)
                    {
                        <dt>
                            @Html.DisplayNameFor(model => model.Manufacturer)
                        </dt>
                        <dd>
                            <a href="@Url.Action("Details", "Manufacturers", new { id =  Model.Manufacturer.Id})">@Model.Manufacturer.Name</a>
                        </dd>
                    }
                    @if (Model.Type != null)
                    {
                        <dt>
                            @Html.DisplayNameFor(model => model.Type)
                        </dt>
                        <dd>
                            <a href="@Url.Action("Details", "Manufacturers", new { id =  Model.Type.Id})">@Model.Type.Name</a>
                        </dd>
                    }
                    @if (Model.Package != null)
                    {
                        <dt>
                            @Html.DisplayNameFor(model => model.Package)
                        </dt>
                        <dd>
                            <a href="@Url.Action("Details", "Manufacturers", new { id =  Model.Package.Id})">@Model.Package.Name</a>
                        </dd>
                    }
                    @if (Model.Location != null)
                    {
                        <dt>
                            @Html.DisplayNameFor(model => model.Location)
                        </dt>
                        <dd>
                            <a href="@Url.Action("Details", "Locations", new { id =  Model.Location.Id})">@Model.Location.Name</a>
                        </dd>
                    }

                </dl>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">

        <div class="panel panel-info">
            <div class="panel-heading">Images <span class="badge">@Model.Files.Where(a => a.File_Type == "Images").Count()</span></div>
            <div class="panel-body">
                @foreach (EMBDatabase.Models.File img in Model.Files.Where(a => a.File_Type == "Images"))
                {
                    string mgsrc = "imageresource" + img.Id;
                    <div class="col-xs-6 col-md-3">
                        <a href="#" class="thumbnail" title=@img.Name id="pop" onclick="myFunction(event)">
                            <img src=@Url.Content(img.File_Path) alt="..." id=@mgsrc>
                        </a>
                    </div>

                }

                <!-- Creates the bootstrap modal where the image will appear -->
                <div class="modal fade" id="imagemodal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                            </div>
                            <div class="modal-body">
                                <img src="" id="imagepreview">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="panel-footer">
                @using (Html.BeginForm("UploadFile", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <div class="containerz">
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.Id)
                        @Html.Hidden("sender", "Parts")
                        @Html.Hidden("file_type", "Images")
                        <div class="block">
                            @Html.TextBox("file", "", new { type = "file", accept = "image/png, image/jpeg, image/jpg, image/bmp" })
                        </div>
                        <div class="block">
                            <input type="submit" value="Upload" class="btn btn-default" />
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="panel panel-info">
            <div class="panel-heading">Documents <span class="badge">@Model.Files.Where(a => a.File_Type == "Documents").Count()</span></div>
            <div class="panel-body">
                @foreach (EMBDatabase.Models.File doc in Model.Files.Where(a => a.File_Type == "Documents"))
                {
                    <div class="col-xs-6 col-md-4">
                        <a href=@Url.Content(doc.File_Path) title=@doc.Name>
                            @doc.Name
                        </a>
                    </div>
                }
            </div>
            <div class="panel-footer">
                @using (Html.BeginForm("UploadFile", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <div class="containerz">
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.Id)
                        @Html.Hidden("sender", "Parts")
                        @Html.Hidden("file_type", "Documents")
                        <div class="block">
                            @Html.TextBox("file", "", new { type = "file" })
                        </div>
                        <div class="block">
                            <input type="submit" value="Upload" class="btn btn-default" />
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
